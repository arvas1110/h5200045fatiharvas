[{
		"ProgramlamaDili": "C",
		"Tasarimci": "Dennis Ritchie",
		"CikisTarihi": "1972",
		"Detay": "<b><h3 style=\"color: #0086D4\">C Programlama Nedir?</h3></b><p>C yazılım dili yüksek seviyeli aynı zamanda geniş maksatlı bir programlama dili olarak karşımıza çıkıyor. <b>Dennis Ritchie ve Brian Kernighan</b> tarafından Bell Labs'da 1972 yılında geliştirilmiş ve kullanımına başlanmıştır. Ayrıca C programlama dili neredeyse hiç duyulmayan bir programlama bili olan B programlama dilinin tabanı esas alınarak geliştirilmiştir.</p> C programlama dili ayrıca Firmware ve taşınabilir uygulamalar geliştirmek için öncelikli olarak tercih ediliyor. Günümüzde de hala en çok tercih edilen yazılım dili olarak karşımıza çıkan C programlama dilin kullanılarak geliştirildiği en önemli yazılım unix işletim sistemi olarak biliniyor. Çok sık tercih edilmesinin yanı sıra öğrenme aşaması da biraz uzundur. Bu yazılım dilini öğrenmek için internet üzerindeki kaynakları kullanabilmenin yanı sıra aynı zamanda eğitim setleri de mevcut. Bu şekilde C dilini öğrenmeniz mümkün. Ancak her yazılım dilinde olduğu gibi bu yazılım dilinin de öğrenilmesi biraz vakit alıyor.<p> Özellikle güvenli uygulamalar ve sistemler geliştirmek için kullanılıyorsa çok titiz bir çalışma gerektirir. Bu yüzden bütün detaylarını net bir şekilde öğrenmek oldukça önemlidir. Kısacası C programlama dili en çok tercih edilen ve öğrenme aşaması için zaman ayırmanız gereken bir dil olarak değer görüyor. Yüksek seviyeli yazılımlar için tercih edilmesinin yanı sıra aynı zamanda kaliteli işler ortaya koymak için de bu dil sıklıkla tercih ediliyor.</p><h3>C Programlama Kullanım Alanları ve Örnekleri</h3><p>C programlama dili genellikle taşınabilir uygulamaların geliştirilmesinde tercih edilen bir dil olarak değerlendiriliyor. Ayrıca yüksek seviyeli yazılımlar söz konusu olduğu zaman da bu programlama diline başvurulabiliyor. C dili ile geliştirilmiş yazılımlara örnek vermek gerektiğinde karşımıza unix işletim sistemi çıkıyor.</p><p>1972 yılında geliştirilmiş olan bu programlama dili gelişmiş seçenekler sunan uygulamaların yazılımı için de sık sık tercih ediliyor. Ayrıca özellikle oyun sektöründe sık sık kullanılan C++, Java, JavaScript, JavaApplet , PHP , C# gibi yazılım dilleri de C programlama dilinden esinlenerek ortaya çıkarılmıştır. Yani bu programlama dili için önemli yazılım dillerinin de başlangıcı denilebilir. C programlama dili ile neler yapabileceğiniz konusuna gelecek olursak, bu dil ile driverler yazabilirsiniz.</p><p> Grafik ve oyun yazılımları üretebilirsiniz. Gömülü sistem olarak değerlendirilen çamaşır makinesi hesap makinesi gibi makineleri de kodlayabilirsiniz. Ayrıca bu yazılım dili ile robot yapabilirsiniz. Bunların yanı sıra unix çekirdeği, Microsoft Windows programları, işletim sistemi uygulamaları ve android işletim sisteminin büyük bir bölümü c programlama dili kullanılarak oluşturulmuştur. Yeni bir programlama dilini oluşturmak içinde C programlama dilini de kullanabiliyorsunuz. Kısacası bu programlama dili teknolojinin her alanında ve her aşamasında öncelikli olarak tercih ediliyor.</p><b><h3>Örnek bir C kodu</h3></b><pre><code>#include &lt;stdio.h&gt; <br><br>int main(){<br><br>&nbsp;&nbsp;printf(&quot;Hello World&quot;);<br><br>&nbsp;&nbsp;return 0;<br>}</code></pre><br><br>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/c.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/cbackground.png"

	},
	{
		"ProgramlamaDili": "C++",
		"Tasarimci": "Bjarne Stroustrup",
		"CikisTarihi": "1983",
		"Detay": "<b><h3>C++ nedir?</h3></b><p>C++ 1979 yılından itibaren <b>Bjarne Stroustrup</b> tarafından geliştirilen genel amaçlı, orta seviyeli, Nesne Yönelimli Programlama, Generic Programlama gibi programlama yöntemlerine imkan veren bir programlama dilidir.<br><br>Programlama dili ilk olarak C with Classess olarak adlandırılmış 1983 yılında C++ olarak değiştirilmiştir.<br><br>C++ C dilinden türemiştir bundan dolayı her C programı bir C++ programı olarak ifade edilir.<br><br>C++ programlama dilini C dilinden ayıran en önemli özelliği Nesne Yönelimli Programlama yapmaya imkan vermesidir.<br><br>Bu özelliği sayesinde Nesne Yönelimli Programlamada yer alan kapsülleme, çok biçimlilik, kalıtım gibi imkanlara sahiptir.<br><br>Programlama dilleri donanıma müdahelesine göre düşük, orta ve yüksek seviyeli olarak adlandırılır.<br><br>C++ dili C programlama dilinin devamı niteliğinden olduğundan ve bellek yönetimi yapmaya imkan verdiğinden orta seviyeli programlama dilidir.</p><b><h3>C++ nerelerde kullanılır</h3></b><p>C++ dilinin orta seviyeli bir dil olmasından dolayı diğer yüksek seviyeli programlama dillerinden gerekli optimizasyon yapıldığında daha performanslı olduğu söylenebilir.<br><br>Ayrıca NYP desteği sayesinde modern programlamaya imkan vermesinden dolayı Sürücü yazılımları, Oyun, Görüntü işleme, İşletim sistemleri gibi hızın önemli olduğu yerlerde kullanılır.<br><br>OpenCV görüntü işleme kütüphanesi ilk olarak C ile geliştirilmiş daha sonra C++ ile geliştirilmeye devam etmektedir.<br><br>Unity ve bir çok oyun motoru C++ ile geliştirilmiştir.<br><br>TensorFlow, Apache MXNet gibi Yapay Zeka araçları da C++ ile geliştirilmiştir.TensorFlow, Apache MXNet gibi Yapay Zeka araçları da C++ ile geliştirilmiştir.<br><br>Chrome tarayıcısı ve Chrome, Node.js V8 JavaScript moturu C++ ile geliştirilmiştir.<br><br>Benzer şekilde bir çok programlama diline ait derleyici yine C++ ile geliştirilmiştir.</p><b><h3>C ve C++ arasındaki farklar</h3></b><p>C++ dili C programlama dilinin devamıdır.<br><br>Her C programı bir C++ programıdır ancak her C++ programı bir C programı olmayabilir.<br><br>C programlama dili Nesne Yönelimli Programlama yapmaya imkan vermezken C++ programlama dili Nesne Yönelimli Programlama yapmaya imkan verir.<br><br>C++ programlama dili NYP desteği sayesinde string veri türü ve metotlarına sahiptir.<br><br>C++ sıralama, saklama (container), hesaplama işlemlerinde sıklıkla kullanılan sınıf ve metotların yer aldığı STL kütüphanesine sahiptir.<br><br>Bu kütüphanede yer alan algoritmalar Generic Programlama yöntemine göre yazıldığından tür bağımsız işlem yapmaya imkan verir.<br><br>C programlama dili az anahtar kelime ve basitlik için geliştirilmiş ve sürekli olarak geliştirilmeyen bir dildir. Ancak C++ programlama dili sürekli olarak geliştirilmektedir.</p><b><h3>Örnek bir C++ kodu</h3></b><pre><code>#include iostream <br><br>using namespace std;<br><br>int main(){<br><br>&nbsp;&nbsp;int sayilar[] = {10, 20, 30};<br><br>&nbsp;&nbsp;for(int i = 0; i < 10; i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;cout << sayilar[i] << endl;<br>&nbsp;}<br><br>&nbsp;&nbsp;return 0;<br>}</code></pre><br><br>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/cplus.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/cplusbackground.png"

	},
	{
		"ProgramlamaDili": "C#",
		"Tasarimci": "Microsoft",
		"CikisTarihi": "2000",
		"Detay": "<b><h3>C#(Sharp) Nedir?</h3></b><p>C# Microsoft tarafından .NET Teknolojisi için geliştirilen modern bir programlama dilidir. Sözdizimi C-like (C benzeri) bir deneyim sunar.</p><p>Microsoft tarafından geliştirilmiş olsa da ECMA ve ISO standartları altına alınmıştır.</p><p>C programlama dilinde bir tam sayı değişkeni 1 artırmak için değişkenden sonra '++' eki kullanılır. C++ dilinin adı, C diliyle Nesne Yönelimli Programlama yapabilme olanağı (C with Classes) için eklentiler sağladığı için 'C++' şeklindedir. Benzer şekilde C++ diline yeni eklentiler yapılarak ((C++)++) bir adım daha da ileriye götürülmüş ve tamamen nesneye yönelik tasarlanmış C# dilinin isimlendirilmesinde, + karakterlerinin birbirlerine yakınlaşmış hali ve bir melodi anahtarı olan C# Major kullanılmıştır.</p><p>Bu dilin tasarlanmasına Pascal, Delphi derleyicileri ve J++ programlama dilinin tasarımlarıyla bilinen Anders Hejlsberg liderlik etmiştir.</p><p>Birçok alanda Java'yı kendisine örnek alır ve C# da java gibi C ve C++ kod sözdizimine benzer bir kod yapısındadır. .NET kütüphanelerini kullanmak amacıyla yazılan programların çalıştığı bilgisayarlarda uyumlu bir kütüphanenin ve yorumlayıcının bulunması gereklidir. Bu, Microsoft'un .NET Framework'u olabileceği gibi ECMA standartlarına uygun herhangi bir kütüphane ve yorumlayıcı da olabilir. Yaygın diğer kütüphanelere örnek olarak Portable.Net ve Mono verilebilir.</p><p>Nesne yönelimli programlama kavramının gelişmesine katkıda bulunan aktif programlama dillerinden biridir.</p><p>C#, .NET orta seviyeli programlama dillerindendir. Yani hem makine diline hem de insan algısına eşit seviyededir. Buradaki orta ifadesi dilin gücünü değil makine dili ile günlük konuşma diline olan mesafesini göstermektedir. Örneğin; Visual Basic .NET (VB.NET) yüksek seviyeli bir dildir dersek bu, dilin insanların günlük yaşantılarında konuşma biçimine yakın şekilde yazıldığını ifade etmektedir. Dolayısıyla VB.NET, C#.NET'ten daha güçlü bir dildir diyemeyiz.</p><p>Programın çalışması istenen bilgisayarlarda framework kurulu olması gerekmektedir. (Windows 7 ve Windows Vista'da .NET Framework kuruludur</p><b><h3>Örnek bir C# kodu</h3></b><pre><code>using System;<br><br>class Program<br>{<br><br>&nbsp;&nbsp;static void Main()<br>&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(&quot;Merhaba Dünya!&quot;);<br><br>&nbsp;&nbsp;}<br><br>}</code></pre>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/csharp.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/csharpbackground.png"

	},
	{
		"ProgramlamaDili": "Python",
		"Tasarimci": "Guido van Rossum",
		"CikisTarihi": "1990",
		"Detay": "<b><h3>Python Nedir ve Neler Yapılabilir?</h3></b><p>Bugünlerde herkesin Python hakkında konuştuğunu fark etmişsinizdir. Bunun nedeni hızlı büyüyen ve en çok sevilen programlama dili olduğu içindir. Çok yönlülüğü ile bilinen Python, çeşitli projelerde ve veri bilimi, makine öğrenimi, blok zinciri dahil olmak üzere pek çok sektörde kullanılabilir.</p><p>Python, modern yazılım geliştirme için en popüler seçeneklerden biri olan yorumlanmış, genel amaçlı bir programlama dilidir. İlk olarak, modülerdir; yani diğer teknolojiler ve çözümlerle kolayca entegre edilebilir. Ayrıca açık kaynaklıdır. Program başlatılmadan hemen önce makine koduna çevrilir. Bu, farklı işletim sistemlerinde kullanımı daha kolay olan taşınabilir. Yani evrensel programlar yazmayı kolaylaştırır.</p><b><h3>Python Programlama Dili Kodları ve Örnekleri Nelerdir?</h3></b><p>Python, Guido van Rossum tarafından geliştirilmiştir. Stack Overflow'un 2020 anketine göre en çok kullanılan dördüncü dildir. Geliştiricilerin % 44,1'i tarafından kullanılmaktadır. Teknik olmayan bir kişiye ilk bakışta oldukça korkutucu gelebilecek pek çok terim vardır. Fakat Python'a atıfta bulunarak duyacağınız popüler cümlelerin çoğu çerçeveleri, kitaplıkları, nesneleri ve sınıflarıyla ilgilidir.</p><b><h4>Örnek bir Python kodu</h4></b><pre><code>degisken = 'hello world!'<br><br>print(degisken)</code></pre><b><h3>Python Çerçeveleri</h3></b><p>Çerçeve, yazılım geliştirmenin temelini oluşturan bir tel kafestir. Geliştiriciler, belirli bir platform ve programlar oluşturmak için bunları kullanır. Sonuç olarak, bir proje üzerinde her çalıştıklarında 'tekerleği yeniden icat etmeleri' gerekmez.</p><b><h3>Python Kitaplıkları</h3></b><p>Çerçeveler gibi, kitaplıklar da yazılım geliştiriciler için son derece yararlı bir kaynaktır. Doğrudan koda gömülebildikleri için geliştiricilere tonlarca zaman kazandırır. Kullanıma hazır modüller ve işlevler sağlarlar. Python'un artan popülaritesinin ardındaki nedenlerden biri, aralarından seçim yapabileceğiniz kütüphanelerin zenginliğidir.</p><b><h3>Python Nesneleri ve Sınıfları</h3></b><p>Bilmeniz gereken diğer iki terim, Python'da birlikte çalışan nesneler ve sınıflardır. Nasıl çalıştıklarını ve karşılıklı bağımlılıklarını gördüklerini anlarken, teknik konulara girmeyi gerektirecek olsa da; <br><br>Python'daki nesneler, gerçek hayatta etrafımızı sardığımız nesnelere oldukça benzer. Yani, belirli özellikleri ve davranışları vardır. Python'da, sınıflardan oluşturulan çeşitli nesneler, sonuçları yönlendirmek için birbirleriyle etkileşime girebilir.</p>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/python.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/pythonbackground.png"

	},
	{
		"ProgramlamaDili": "Java",
		"Tasarimci": "James Gosling",
		"CikisTarihi": "1995",
		"Detay": "<b><h3>Java Nedir?</h3></b><p>Java, Sun Microsystems mühendislerinden James Gosling tarafından geliştirilmeye başlanmış açık kodlu, nesneye yönelik(object-oriented), zeminden bağımsız, yüksek verimli, çok işlevli, yüksek seviye, adım adım işletilen yapısal bir dildir.</p><p>Java programlama dili pure object-oriented olmak amacı ile varlığını sürdüren nesneye yönelik programcılığı savunan ve sonuna kadar bu felsefeyi uygulamaya çalışan, platform independent yani belli bir platforma ihtiyaç duymayan bağımsız ve “wora” felsefesi ile ilerleyen bir dildir. Wora felsefesini açmak gerekirse eğer; “write once run anywhere” yani bir kere yaz heryerde kullan mantığı vardır.</p><p>Java dilinde program doğrudan anlaşılan koda dönüştürülmez. JVM(Java Sanal Makine) tarafından yorumlanan bayt koduna(.class dosyası) dönüştürülür. Bu sebeple de derlendiğinde herhangi bir yerde çalıştırılabilen bayt kodu dosyası oluşturur. Bir kez yaz ve herhangi bir yerde çalıştır doğasını buradan alır.</p><b><h3>Java Programlama Dili ile Neler Yapılabilir?</h3></b><p>Android / iOS için mobil uygulama geliştirebilirsiniz, Web sitelerinde kullanabilirsiniz, Masaüstü uygulamalar yapabilirsiniz, Oyun geliştirebilirsiniz.. Kullanım alanı oldukça fazladır.</p><b><h3>Java Programlama Dili için kullanılan IDE ‘ler Nelerdir?</h3></b><p>IDE yazılım geliştirirken kolaylıkla kod yazabilmemizi sağlayan geliştiriciye ilgili framework ya da ilgili kodlama tekniği konusunda destek veren programlardır. IDE kullanmadan java programlama dilinde yazılım geliştirmek tercih edilen bir yöntem değildir.</p><h4>Java dünyasında en çok tercih edilen başlıca IDE ler;</h4><p>1.Intellij Idea<br><br>2. Net Beans<br><br>3. Eclipse ‘dir.</p>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/java.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/javabackground.png"

	},
	{
		"ProgramlamaDili": "Kotlin",
		"Tasarimci": "JetBrains",
		"CikisTarihi": "2011",
		"Detay": "<b><h3>Kotlin'in Tarihçesi</h3></b><p>Mayıs 2019'da Google, Kotlin'in artık Android uygulama geliştiricileri için tercih edilen programlama dili olduğunu duyurdu.</p><p>Kotlin'in en öne çıkan özelliği, kısa ve öz olmasında yatmaktadır: aslında Kotlin, hem yazma, test etme hem de bakım açısından daha az kod gerektirir.</p><p>Google'ın duyurusu beklenmedik değildi. İki yıl önce şirket, Java'yı en sevilen android geliştirme dili olarak tahtından indiren Kotlin'e birinci sınıf desteğini duyurmuştu.</p><p>Öncelikle Android'e odaklanmış olmasına rağmen, Kotlin, iOS dahil olmak üzere birden fazla platform için gidilecek programlama dili olmayı hedefliyor.</p><b><h3>Kotlin Nedir?</h3></b><p>Kotlin ilk olarak 2011'de ortaya çıktı, ancak ilk beş yılda fazla ilgi görmemiştir. JetBrains firması tarafından oluşturulmuştur.<br><br>Kotlin, Google'ın desteğini açıklamasının ardından 2017'de yayın olarak kullanılmaya başlanmıştır.</p><b><h3>Kotlin'in Getirdiği Kolaylıklar</h3></b><p>Kotlin'in geniş bir kullanım alanına sahip olmasının altında aşağıdaki nedenler yatmaktadır</p><h4>1. Java Koduyla Birlikte Çalışabilirlik</h4><p>Java koduyla birlikte çalışabilirlik, geliştiricilerin Kotlin'i sevmesinin ana nedenlerinden biridir.<br><br> Dilin sözdizimi Java ile uyumlu olmasa da, Kotlin Java ile tam olarak birlikte çalışacak şekilde tasarlanmıştır.<br><br> Bu, Java ile yazılmış mevcut kod tabanınızın Kotlin ile düzgün bir şekilde etkileşime girebileceği ve bunun tersi anlamına gelir.</p><b><h4>2. Kolay Öğrenme Eğrisi ve Açık Kaynak</h4></b><p>2012 yılından bu yana Kotlin açık kaynak kodlu bir programlama dilidir ve sürekli olarak geliştirilmektedir.<br><br>Geliştiriciler, kesinlikle bir artı olan Kotlin topluluğundan büyük destek alabilirler.<br><br>Kotlin'in üstün IDE desteğine sahip olduğunu söylemeye gerek yok. Tüm büyük Java IDE'leri destek sağlar: NetBeans, IntelliJ IDEA, Eclipse ve Android Studio.</p>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/kotlin.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/kotlinbackground.png"

	},
	{
		"ProgramlamaDili": "Swift",
		"Tasarimci": "Chris Lattner ve Apple",
		"CikisTarihi": "2014",
		"Detay": "<b><h3>Swift Nedir?</h3></b><p>Swift, Apple’ın 2 Haziran 2014 tarihinde tanıttığı, Apple platformlarında yazılım geliştirmeyi sağlayan, açık kaynak kodlu bir yazılım dilidir.</p><p>Swift, gerçekten çok hızlı, çok güçlü ve oldukça anlaşılır bir yazılım dilidir. Bu yüzden de Swift öğrenmek gerçekten de çok kolaydır. Swift o kadar anlaşılır bir dildir ki, kodlamadan hiç anlamayan bir insan bile bir Swift kodunu gördüğü zaman anlayabilir.</p><p>Swift dilinin ne kadar hızlı bir dil olduğunu Swift dilini diğer yazılım dilleriyle karşılaştırarak anlayabiliriz: Apple’a göre, Swift, Objective-C diline göre 2.6 kat ve Python diline göre 8.4 kat daha hızlıdır.</p><p>ift’in bu yanları tabii ki onu çok başarılı yapmıştır ve yapmaya da devam etmektedir. Örneğin; Swift, sadece 5 yaşında bir yazılım dili olmasına rağmen, en çok sevilen yazılım dillerinden biridir. Hatta Apple, Swift’i 2015 yılında açık kaynak bir dil hâline getirdiği ilk hafta, 60.000'den fazla insan Swift’in gelişimine katkı sağlamıştır. Böylece Swift, TIOBE Index’e göre, 2 yıl içerisinde tarihin en hızlı büyüyen dili hâline geldi: Dil, Ekim 2018'de en popüler 10 yazılım dilinden biri haline gelmiştir.</p><p>Swift, nesne tabanlı (Objected Oriented Programming) bir programlama dilidir. Günümüzde Python, Java, Ruby, C++ gibi birçok popüler programlama dili nesne tabanlı çalışmaktadır.</p><b><h3>Platformlar</h3></b><p>Swift ile iOS, iPadOS, macOS, watchOS, tvOS ve hatta Linux işletim sistemleri için yazılımlar geliştirebilirsiniz. Bu platformlarda geliştirebileceklerinizin sınırı yok. Bu platformlar üzerinde, isterseniz Siri ile çalışan harika bir yapay zeka uygulaması ya da büyülü dünyanızı ortaya çıkarttığınız bir arttırılmış gerçeklik (AR) uygulaması yapabilirsiniz!</p><b><h3>Geliştirme Araçları</h3></b><p>Swift programlama diliyle geliştirme yapmak için kullanabileceğiniz iki uygulama vardır: Xcode ve Playgrounds.</p><h4>Xcode</h4><p>Xcode, hem profesyoneller hem de yeni başlayanlar için muhteşem bir araçtır. Xcode sayesinde muhteşem iOS, iPadOS, watchOS, macOS ve tvOS işletim sistemleri için yazılım geliştirilebilirsiniz. Swift paketleri desteğiyle Xcode, kodu tüm uygulamalarınız arasında paylaşmanıza veya topluluk tarafından oluşturulan paketleri kullanmanıza olanak tanır. Xcode, Swift ile geliştirme yapan birisinin en temel geliştirme aracıdır.</p><h4>Playgrounds</h4><p>Playgrounds, Swift öğrenmeyi interaktif ve eğlenceli hale getiren bir uygulamadır. Bu uygulama üzerinde yaratılan Playground kitapçıklarıyla hiç kodlama bilmeyen bir insan rahatlıkla Swift programlama dilini öğrenmeye başlayabilir. Eğer siz de Swift öğrenmeye başlamak istiyorsanız, Apple’ın Türkçe olarak da hazırlamış olduğu Playground kitapçıklarına göz atabilirsiniz. Ayrıca, bu uygulama üzerinden siz de Playground kitapçıkları oluşturabilirsiniz. (Hatta Apple her sene düzenlediği Dünya Geliştiriciler Konferansına (WWDC) burslu olarak katılmak isteyen kişilerden bir Playground kitapçığı hazırlamalarını istemektedir.)</p>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/swift.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/swiftbackground.png"

	},
	{
		"ProgramlamaDili": "JavaScript",
		"Tasarimci": "Brendan Eich",
		"CikisTarihi": "1995",
		"Detay": "<b><h3>Javascript Nedir?</h3></b><p>Dinamik bir programlama dili olarak bilinen javascript internet dünyasında web site tasarımlarını gerçekleştirmek için kullanılır. Bu program sayesinde web siteleri oldukça dinamik bir şekilde tasarlanabilir. Bunun yanı sıra web sitelerin işlevselliği de hızla artar. Günümüzde de sıklıkla kullanılan javascript ister kullanıcı taraflı isterse sunucu taraflı olabilir.</p><p>Netscape şirketinde çalışan Brendan Eich tarafından geliştirilen javascript'in nerede ise 20 yıllık bir geçmişi bulunuyor. Ayrıca javascript, HTML dilini de desteklemek için tasarlanmıştır. 1995 yılından beri aktif bir şekilde kullanılan javascript günümüzde de en popüler yazılım dillerinden birisidir. Kullanım kolaylığının yanı sıra işlevsel oluşu da javascript'i tercih sebebi yapan unsurlar arasında yer alıyor. Javascript'in en önemli özelliği prototip tabanlı bir program olmasıdır. Bunun yanı sıra javascript nesne yönelimi olan bir programlama olarak bilinir.</p><b><h3>Javascript Ne İşe Yarar?</h3></b><p>Günümüzde teknolojinin hızla gelişmesi yeni arayışları da beraberinde getiriyor. Özellikle de satış ve pazarlama gibi konularda daha uzak alanlara yayılmak adına dijital pazarlama ve tanıtım da ön plana çıkıyor. Bu nedenle internet sitelerinin kullanımını arttırmak için de en iyi tasarıma sahip olan web siteleri tercih ediliyor. Günümüzde ise bu internet sitelerinde kullanıcı odaklılık açısından en iyi sistemlerden birisi de javascript olarak biliniyor.</p><p>Javascript kullanım kolaylığı ve çalışma alt yapısı sayesinde oldukça fazla avantaj sunuyor. İnternet sitelerinin kullanıcı odaklı olması ve daha fazla etkileşimde bulunulması için de javascript en fazla tercih edilen teknolojilerden bir tanesidir. Bu nedenle javascript özellikle web tasarımcıların en çok tercih ettikleri yazılım dillerinden birisi olarak ortaya çıkmaktadır. İşlem yükünü ciddi anlamda düşüren javacript sayesinde basit işlemler hızlı bir şekilde gerçekleşiyor.</p><b><h3>Javascript İle Neler Yapılabilir Örnekleri</h3></b><p>Geçmişten günümüze web sitelerinin yazılım dilinde kullanılan javascript aynı süre içerisinde birbirinden farklı alanlarda çeşitli işlemler yapabilir. Ayrıca Vue ile daha etkili bir hale gelen javascript ciddi anlamda performans tasarrufu sağlamaktadır. Javascript diğer tüm yazılım dillerine göre çok daha anlaşılan ve oldukça basit bir yapıya sahip olması ile bilinir. O nedenle bu yazılım dilini kullanmak çok daha kolaydır.</p><p>Her defasında yeniden kod yazılmasının önüne geçen bu yazılım dili sayesinde web tasarımcı kod yazarken oldukça rahat hareket edebilir. Javascript sayesinde kullanıcılar ile gerçekleşen iletişim çok daha pratik ve hızlı olacaktır. Bunun yanı sıra sade ve statik yapısı ile bilinen HTML javascript sayesinde daha dinamik bir hale gelebilir.</p><b><h3>Javascript Sunduğu Avantajlar</h3></b><p>Geçmiş yıllardan günümüze kadar gelişerek gelen javascript dijital dünyada çok önemli bir yere sahiptir. Çünkü günümüzde teknoloji her geçen gün gelişiyor. Yenilikler ile birlikte hızlı olmanın da önem taşıdığı dijital dünyada web sitelerinin kullanışlı olması ve kullanıcıya daha fazla alternatifler sunması bekleniyor. O nedenle web sitelerin tasarımında da javascript çok fazla tercih ediliyor. Web tasarımcılar dinamik ve işlevsel olan javascript'i daha fazla tercih ediyorlar. Bu sayede yazılım dili sayesinde iş yükü de azalmış oluyor. Javascript bu nedenle en önemli yazılım dilleri arasında yer alıyor.</p>",
		"KucukLogoUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/javacript.png",
		"BuyukResimUrl": "https://raw.githubusercontent.com/arvas1110/h5200045fatiharvas/main/javascriptbackground.png"

	}

]
